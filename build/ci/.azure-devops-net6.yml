parameters:
  poolName: ''

jobs:
- job: net6_build
  displayName: '.NET 6 Package Build'
  timeoutInMinutes: 90

  pool: ${{ parameters.poolName }}

  strategy:
    matrix:
      UWP:
        UNO_UWP_BUILD: true

      WinUI:
        UNO_UWP_BUILD: false

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true

    # Disable .NET 5 build on CI for package generation
    # Build validation is performed on other jobs
    UnoUIDisableNetCoreBuild: true

    # This is required to be able to use hard links as much as possible
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

    # net6 related
    DotNetVersion: 6.0.100-preview.3.21202.5
    DotNet.Cli.Telemetry.OptOut: true
    Android.Msi: https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/net6/4624420/6.0.1xx-preview3/7d6cd1cde4182d7db2cfc5d0b55364c972b6d34f/Microsoft.NET.Workload.Android.11.0.200.196.msi
    Android.Pkg: https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/net6/4624420/6.0.1xx-preview3/7d6cd1cde4182d7db2cfc5d0b55364c972b6d34f/Microsoft.NET.Workload.Android-11.0.200-preview.3.196.pkg
    iOS.Msi: https://bosstoragemirror.azureedge.net/wrench/6.0.1xx-preview3/f68d4d9c2a342daf9eaad364ccbe252e009d3901/4623693/package/Microsoft.NET.Workload.iOS.14.4.100-preview.3.1326.msi
    iOS.Pkg: https://bosstoragemirror.azureedge.net/wrench/6.0.1xx-preview3/f68d4d9c2a342daf9eaad364ccbe252e009d3901/4623693/package/notarized/Microsoft.iOS.Bundle.14.4.100-preview.3.1326.pkg
    macOS.Pkg: https://bosstoragemirror.azureedge.net/wrench/6.0.1xx-preview3/f68d4d9c2a342daf9eaad364ccbe252e009d3901/4623693/package/notarized/Microsoft.macOS.Bundle.11.1.100-preview.3.1379.pkg
    MacCatalyst.Pkg: https://bosstoragemirror.azureedge.net/wrench/6.0.1xx-preview3/f68d4d9c2a342daf9eaad364ccbe252e009d3901/4623693/package/notarized/Microsoft.MacCatalyst.Bundle.14.3.100-preview.3.471.pkg

  steps:
  - checkout: self
    clean: true

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/gitversion.yml

  ## Required until .NET 6 installs properly on Windows using UseDotnet
  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
      & .\dotnet-install.ps1 -Version $(DotNetVersion) -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
      & dotnet --list-sdks
    displayName: install .NET $(DotNetVersion)
    errorActionPreference: stop

  - powershell: |
      & dotnet tool install --global boots
      & boots $(Android.Msi)
      & boots $(iOS.Msi)
    displayName: install .NET workloads
    errorActionPreference: stop

  - template: templates/install-windows-sdk.yml

  - powershell: |
        cd $(build.sourcesdirectory)\src\Uno.WinUIRevert
        dotnet run "$(build.sourcesdirectory)"

    condition: and(succeeded(), eq(variables['UNO_UWP_BUILD'], 'false'))
    displayName: Convert source tree to WinUI 3 structure

  - task: MSBuild@1
    inputs:
      solution: Build/Uno.UI.Build.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /m /t:UpdateFileVersions "/p:ArtifactsDir=$(build.artifactstagingdirectory)\artifacts" "/p:CombinedConfiguration=$(CombinedConfiguration)" /detailedsummary /bl:$(build.artifactstagingdirectory)\build-$(GitVersion.FullSemVer).binlog
      clean: false
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: DotNetCoreCLI@2
    inputs:
      workingDirectory: src
      arguments: Uno.UI-net6-only.slnf -c Release /bl:$(build.artifactstagingdirectory)\build-$(GitVersion.FullSemVer)-net6-$(UNO_UWP_BUILD).binlog

  - task: CopyFiles@2
    condition: always()
    inputs:
      SourceFolder: $(build.sourcesdirectory)/Build
      Contents: '*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)\nuget
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: NugetPackages-Artifacts
      ArtifactType: Container
